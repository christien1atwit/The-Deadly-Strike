:Character:
## This is a skeleton, which is added to all characters automatically. You can use it to define the common parts of your character, for example:
## - System mechanics
## - Movement
## - Attack types
## etc.
:Specs-PhysicsTeching:
# Automatic creation
:Specs-PhysicsSystem:
# Automatic creation
:Specs-PhysicsMovement:
def MOVE_Dashes_CanRun bool() = 1
def MOVE_Dashes_CanBackdash bool() = 1
def MOVE_Landing_RecoverCrouching bool() = 0
:Specs-Graphics:
# Automatic creation
:Specs-AudioSFX:
# Automatic creation
:Specs-AttacksTypes:
# Automatic creation
:Specs-AttacksThrows:
def ATTACK_Throw_CanAirThrow bool() = 0
def ATTACK_Throw_Air_ThrowBAutoFlip bool() = 0
:Specs-AttacksMechanics:
def ATTACK_CanBlockInAir bool() = 0
:Specs-Anims:
# Automatic creation
:Variables-System:
var current_lane int() = 1
:Variables:
## These variables are common to all characters since it's in the skeleton.
##var current_lane int() = 1
:Custom-NeutralStateCommon:
CallParent()
Call(Raise-Lane-Flag)
:Raise-Lane-Flag:
##Will set the appropriate lane flag when called


Vcurrent_lane==0:
	Flag(BackLane)
endif

Vcurrent_lane==1:
	Flag(MidLane)
endif

Vcurrent_lane==2:
	Flag(FrontLane)
endif

F1:
	Log(_Flags)
endif
:Shift-In-Stand:
# Simple medium attack template
AttackRegister(Light, 5A+B)



F1:
	Flag(BackLane)
endif
:State-Template-Attack-Normal-Lane:
# Simple medium attack template for Lane Combat
Call(Raise-Lane-Flag)

AttackRegister(Medium)

# Adjust parameters here
AttackDamage(1000)
AttackDuration(60)
# AttackFlag(Low)

# Put your animation here
#Anim(5B)

# Active frames and hitboxes
F10-12:
	Hitbox(0, 15000, 5000, 15000)
endif
:Current-Lane---Subentity:
# Autogenerated
:Current-Lane---Variables:
## Put variables here
:Current-Lane---Action:
## Write your behavior here
CallParent()
